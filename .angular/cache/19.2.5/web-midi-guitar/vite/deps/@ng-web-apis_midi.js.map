{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ng-web-apis/common/fesm2022/ng-web-apis-common.mjs", "../../../../../../node_modules/@ng-web-apis/midi/fesm2022/ng-web-apis-midi.mjs"],
  "sourcesContent": ["import { InjectionToken, inject } from '@angular/core';\nimport { Observable, share, fromEvent, startWith, map, distinctUntilChanged, shareReplay } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nconst WA_WINDOW = new InjectionToken('[WA_WINDOW]', {\n  factory: () => {\n    const {\n      defaultView\n    } = inject(DOCUMENT);\n    if (!defaultView) {\n      throw new Error('Window is not available');\n    }\n    return defaultView;\n  }\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_WINDOW}\n */\nconst WINDOW = WA_WINDOW;\nconst WA_ANIMATION_FRAME = new InjectionToken('[WA_ANIMATION_FRAME]', {\n  factory: () => {\n    const {\n      requestAnimationFrame,\n      cancelAnimationFrame\n    } = inject(WINDOW);\n    const animationFrame$ = new Observable(subscriber => {\n      let id = NaN;\n      const callback = timestamp => {\n        subscriber.next(timestamp);\n        id = requestAnimationFrame(callback);\n      };\n      id = requestAnimationFrame(callback);\n      return () => {\n        cancelAnimationFrame(id);\n      };\n    });\n    return animationFrame$.pipe(share());\n  }\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_ANIMATION_FRAME}\n */\nconst ANIMATION_FRAME = WA_ANIMATION_FRAME;\nconst WA_CACHES = new InjectionToken('[WA_CACHES]', {\n  factory: () => inject(WINDOW).caches\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_CACHES}\n */\nconst CACHES = WA_CACHES;\nconst WA_CRYPTO = new InjectionToken('[WA_CRYPTO]', {\n  factory: () => inject(WINDOW).crypto\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_CRYPTO}\n */\nconst CRYPTO = WA_CRYPTO;\nconst WA_CSS = new InjectionToken('[WA_CSS]', {\n  factory: () => inject(WINDOW).CSS ?? {\n    escape: v => v,\n    // eslint-disable-next-line no-restricted-syntax\n    supports: () => false\n  }\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_CSS}\n */\nconst TOKEN_CSS = WA_CSS;\nconst WA_HISTORY = new InjectionToken('[WA_HISTORY]', {\n  factory: () => inject(WINDOW).history\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_HISTORY}\n */\nconst HISTORY = WA_HISTORY;\nconst WA_LOCAL_STORAGE = new InjectionToken('[WA_LOCAL_STORAGE]', {\n  factory: () => inject(WINDOW).localStorage\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_LOCAL_STORAGE}\n */\nconst LOCAL_STORAGE = WA_LOCAL_STORAGE;\nconst WA_LOCATION = new InjectionToken('[WA_LOCATION]', {\n  factory: () => inject(WINDOW).location\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_LOCATION}\n */\nconst LOCATION = WA_LOCATION;\nconst WA_NAVIGATOR = new InjectionToken('[WA_NAVIGATOR]', {\n  factory: () => inject(WINDOW).navigator\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_NAVIGATOR}\n */\nconst NAVIGATOR = WA_NAVIGATOR;\nconst WA_MEDIA_DEVICES = new InjectionToken('[WA_MEDIA_DEVICES]', {\n  factory: () => inject(NAVIGATOR).mediaDevices\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_MEDIA_DEVICES}\n */\nconst MEDIA_DEVICES = WA_MEDIA_DEVICES;\nconst WA_NETWORK_INFORMATION = new InjectionToken('[WA_NETWORK_INFORMATION]', {\n  // @ts-ignore\n  factory: () => inject(WA_NAVIGATOR).connection || null\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_NETWORK_INFORMATION}\n */\nconst NETWORK_INFORMATION = WA_NETWORK_INFORMATION;\nconst WA_PAGE_VISIBILITY = new InjectionToken('[WA_PAGE_VISIBILITY]', {\n  factory: () => {\n    const documentRef = inject(DOCUMENT);\n    return fromEvent(documentRef, 'visibilitychange').pipe(startWith(0), map(() => documentRef.visibilityState !== 'hidden'), distinctUntilChanged(), shareReplay({\n      refCount: false,\n      bufferSize: 1\n    }));\n  }\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_PAGE_VISIBILITY}\n */\nconst PAGE_VISIBILITY = WA_PAGE_VISIBILITY;\nconst WA_PERFORMANCE = new InjectionToken('[WA_PERFORMANCE]', {\n  factory: () => inject(WINDOW).performance\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_PERFORMANCE}\n */\nconst PERFORMANCE = WA_PERFORMANCE;\nconst WA_SCREEN = new InjectionToken('[WA_SCREEN]', {\n  factory: () => inject(WINDOW).screen\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_SCREEN}\n */\nconst SCREEN = WA_SCREEN;\nconst WA_SESSION_STORAGE = new InjectionToken('[WA_SESSION_STORAGE]', {\n  factory: () => inject(WINDOW).sessionStorage\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_SESSION_STORAGE}\n */\nconst SESSION_STORAGE = WA_SESSION_STORAGE;\nconst WA_SPEECH_RECOGNITION = new InjectionToken('[WA_SPEECH_RECOGNITION]: [SPEECH_RECOGNITION]', {\n  factory: () => {\n    const windowRef = inject(WINDOW);\n    return windowRef.speechRecognition || windowRef.webkitSpeechRecognition || null;\n  }\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_SPEECH_RECOGNITION}\n */\nconst SPEECH_RECOGNITION = WA_SPEECH_RECOGNITION;\nconst WA_SPEECH_SYNTHESIS = new InjectionToken('[WA_SPEECH_SYNTHESIS]', {\n  factory: () => inject(WINDOW).speechSynthesis\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_SPEECH_SYNTHESIS}\n */\nconst SPEECH_SYNTHESIS = WA_SPEECH_SYNTHESIS;\nconst WA_USER_AGENT = new InjectionToken('[WA_USER_AGENT]', {\n  factory: () => inject(NAVIGATOR).userAgent\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_USER_AGENT}\n */\nconst USER_AGENT = WA_USER_AGENT;\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ANIMATION_FRAME, CACHES, CRYPTO, TOKEN_CSS as CSS, HISTORY, LOCAL_STORAGE, LOCATION, MEDIA_DEVICES, NAVIGATOR, NETWORK_INFORMATION, PAGE_VISIBILITY, PERFORMANCE, SCREEN, SESSION_STORAGE, SPEECH_RECOGNITION, SPEECH_SYNTHESIS, TOKEN_CSS, USER_AGENT, WA_ANIMATION_FRAME, WA_CACHES, WA_CRYPTO, WA_CSS, WA_HISTORY, WA_LOCAL_STORAGE, WA_LOCATION, WA_MEDIA_DEVICES, WA_NAVIGATOR, WA_NETWORK_INFORMATION, WA_PAGE_VISIBILITY, WA_PERFORMANCE, WA_SCREEN, WA_SESSION_STORAGE, WA_SPEECH_RECOGNITION, WA_SPEECH_SYNTHESIS, WA_USER_AGENT, WA_WINDOW, WINDOW };\n", "import { filter, map, from, switchMap, fromEvent, startWith, of, shareReplay, throwError, merge, share } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { Pipe, InjectionToken, inject } from '@angular/core';\nimport { WA_NAVIGATOR } from '@ng-web-apis/common';\nfunction between(value, min, max) {\n  return value >= min && value <= max;\n}\n\n/**\n * Filter MIDI messages to aftertouch changes only\n */\nfunction aftertouch() {\n  return source => source.pipe(filter(({\n    data\n  }) => between(data[0] ?? 0, 208, 223)));\n}\n\n/**\n * Filter MIDI messages by channel\n *\n * @param channel number from 0 to 15\n */\nfunction filterByChannel(channel) {\n  return source => source.pipe(filter(({\n    data\n  }) => (data[0] ?? 0) % 16 === channel));\n}\n\n/**\n * Filter MIDI messages by MIDIInput id\n *\n * @param id\n */\nfunction filterById(id) {\n  return source => source.pipe(filter(({\n    target\n  }) => target.id === id));\n}\n\n/**\n * Filter MIDI messages by MIDIInput name\n *\n * @param name\n */\nfunction filterByName(name) {\n  return source => source.pipe(filter(({\n    target\n  }) => target.name === name));\n}\n\n/**\n * Filter MIDI messages to main volume changes only\n */\nfunction mainVolume() {\n  return source => source.pipe(filter(({\n    data\n  }) => between(data[0] ?? 0, 176, 191) && data[1] === 7));\n}\n\n/**\n * Filter MIDI messages to modulation wheel changes only\n */\nfunction modulationWheel() {\n  return source => source.pipe(filter(({\n    data\n  }) => between(data[0] ?? 0, 176, 191) && data[1] === 1));\n}\n\n/**\n * Filter MIDI messages to notes only\n *\n * IMPORTANT: It normalizes noteOff events to noteOn with 0 velocity\n */\nfunction notes() {\n  return source => source.pipe(filter(({\n    data\n  }) => between(data[0] ?? 0, 128, 159)), map(event => {\n    if (between(event.data[0] ?? 0, 128, 143)) {\n      event.data[0] += 16;\n      event.data[2] = 0;\n    }\n    return event;\n  }));\n}\n\n/**\n * Filter MIDI messages to pan changes only\n */\nfunction pan() {\n  return source => source.pipe(filter(({\n    data\n  }) => between(data[0] ?? 0, 176, 191) && data[1] === 10));\n}\n\n/**\n * Filter MIDI messages to pitch bend changes only\n */\nfunction pitchBend() {\n  return source => source.pipe(filter(({\n    data\n  }) => between(data[0] ?? 0, 224, 239)));\n}\n\n/**\n * Filter MIDI messages to polyphonic aftertouch changes only\n */\nfunction polyphonicAftertouch() {\n  return source => source.pipe(filter(({\n    data\n  }) => between(data[0] ?? 0, 160, 175)));\n}\n\n/**\n * Filter MIDI messages to program changes only\n */\nfunction programChange() {\n  return source => source.pipe(filter(({\n    data\n  }) => between(data[0] ?? 0, 208, 223)));\n}\n\n/**\n * Filter MIDI messages to sustain pedal changes only\n */\nfunction sustainPedal() {\n  return source => source.pipe(filter(({\n    data\n  }) => between(data[0] ?? 0, 176, 191) && data[1] === 64));\n}\n\n/**\n * Extract MIDI data from event\n */\nfunction toData() {\n  return source => source.pipe(map(({\n    data\n  }) => data));\n}\n\n/**\n * Extract data byte (2nd) from MIDI message\n *\n * NOTE: Some status messages do not have 2nd byte, use it when you're certain\n */\nfunction toDataByte() {\n  return source => source.pipe(map(({\n    data\n  }) => data[1] ?? 0));\n}\n\n/**\n * Extract status byte (1st) from MIDI message\n */\nfunction toStatusByte() {\n  return source => source.pipe(map(({\n    data\n  }) => data[0] ?? 0));\n}\n\n/**\n * Extract received time from MIDI event\n */\nfunction toTimeStamp() {\n  return source => source.pipe(map(({\n    timeStamp\n  }) => timeStamp));\n}\n\n/**\n * Extract value byte (3rd) from MIDI message\n *\n * NOTE: Some status messages do not have 3rd byte, use it when you're certain\n */\nfunction toValueByte() {\n  return source => source.pipe(map(({\n    data\n  }) => data[2] ?? 0));\n}\n\n/**\n * Convert MIDI notes to frequencies\n *\n * @param note MIDI note\n * @param tuning tuning for middle A (440 by default)\n */\nfunction toFrequency(note, tuning = 440) {\n  return 2 ** ((note - 69) / 12) * tuning;\n}\nclass FrequencyPipe {\n  transform(note, tuning) {\n    return toFrequency(note, tuning);\n  }\n  static ɵfac = function FrequencyPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FrequencyPipe)();\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"frequency\",\n    type: FrequencyPipe,\n    pure: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FrequencyPipe, [{\n    type: Pipe,\n    args: [{\n      standalone: true,\n      name: 'frequency'\n    }]\n  }], null, null);\n})();\nconst WA_SYSEX = new InjectionToken('[WA_SYSEX]', {\n  providedIn: 'root',\n  // eslint-disable-next-line no-restricted-syntax\n  factory: () => false\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_SYSEX}\n */\nconst SYSEX = WA_SYSEX;\nconst WA_MIDI_ACCESS = new InjectionToken('[WA_MIDI_ACCESS]', {\n  providedIn: 'root',\n  factory: async () => {\n    const navigatorRef = inject(WA_NAVIGATOR);\n    const sysex = inject(SYSEX);\n    return navigatorRef.requestMIDIAccess ? navigatorRef.requestMIDIAccess({\n      sysex\n    }) : Promise.reject(new Error('Web MIDI API is not supported'));\n  }\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_MIDI_ACCESS}\n */\nconst MIDI_ACCESS = WA_MIDI_ACCESS;\nconst WA_MIDI_INPUT = new InjectionToken('[WA_MIDI_INPUT]');\n/**\n * @deprecated: drop in v5.0, use {@link WA_MIDI_INPUT}\n */\nconst MIDI_INPUT = WA_MIDI_INPUT;\nfunction getPortsStream(ports) {\n  return from(inject(MIDI_ACCESS).catch(() => null)).pipe(switchMap(access => {\n    const inputs = [];\n    access?.[ports].forEach(input => inputs.push(input));\n    return access ? fromEvent(access, 'statechange').pipe(map(() => inputs), startWith(inputs)) : of([]);\n  }),\n  // eslint-disable-next-line rxjs/no-sharereplay\n  shareReplay(1));\n}\nconst WA_MIDI_INPUTS = new InjectionToken('[WA_MIDI_INPUTS]', {\n  factory: () => getPortsStream('inputs')\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_MIDI_INPUTS}\n */\nconst MIDI_INPUTS = WA_MIDI_INPUTS;\nconst WA_MIDI_MESSAGES = new InjectionToken('[WA_MIDI_MESSAGES]', {\n  providedIn: 'root',\n  factory: () => from(inject(MIDI_ACCESS).catch(e => e)).pipe(switchMap(access => access instanceof Error ? throwError(access) : fromEvent(access, 'statechange').pipe(startWith(null), switchMap(() => {\n    const inputs = [];\n    access.inputs.forEach(input => inputs.push(input));\n    return merge(...inputs.map(input => fromEvent(input, 'midimessage')));\n  }))), share())\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_MIDI_MESSAGES}\n */\nconst MIDI_MESSAGES = WA_MIDI_MESSAGES;\nconst WA_MIDI_OUTPUT = new InjectionToken('[WA_MIDI_OUTPUT]');\n/**\n * @deprecated: drop in v5.0, use {@link WA_MIDI_OUTPUT}\n */\nconst MIDI_OUTPUT = WA_MIDI_OUTPUT;\nconst WA_MIDI_OUTPUTS = new InjectionToken('[WA_MIDI_OUTPUTS]', {\n  factory: () => getPortsStream('outputs')\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_MIDI_OUTPUTS}\n */\nconst MIDI_OUTPUTS = WA_MIDI_OUTPUTS;\nconst WA_MIDI_SUPPORT = new InjectionToken('[WA_MIDI_SUPPORT]', {\n  factory: () => !!inject(WA_NAVIGATOR).requestMIDIAccess\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_MIDI_SUPPORT}\n */\nconst MIDI_SUPPORT = WA_MIDI_SUPPORT;\nconst WA_MIDI_INPUT_QUERY = new InjectionToken('[WA_MIDI_INPUT_QUERY]');\n/**\n * @deprecated: drop in v5.0, use {@link WA_MIDI_INPUT_QUERY}\n */\nconst MIDI_INPUT_QUERY = WA_MIDI_INPUT_QUERY;\n\n/**\n * Provide MIDIInput by id\n *\n * @param id\n */\nfunction inputById(id) {\n  return [{\n    provide: WA_MIDI_INPUT_QUERY,\n    useValue: id\n  }, {\n    provide: WA_MIDI_INPUT,\n    deps: [WA_MIDI_ACCESS, WA_MIDI_INPUT_QUERY],\n    useFactory: async (midiAccess, id) => midiAccess.then(access => {\n      let result;\n      access.inputs.forEach(input => {\n        if (input.id === id) {\n          result = input;\n        }\n      });\n      return result;\n    })\n  }];\n}\n\n/**\n * Provide MIDIInput by name\n *\n * @param name\n */\nfunction inputByName(name) {\n  return [{\n    provide: WA_MIDI_INPUT_QUERY,\n    useValue: name\n  }, {\n    provide: WA_MIDI_INPUT,\n    deps: [WA_MIDI_ACCESS, WA_MIDI_INPUT_QUERY],\n    useFactory: async (midiAccess, name) => midiAccess.then(access => {\n      let result;\n      access.inputs.forEach(input => {\n        if (input.name === name) {\n          result = input;\n        }\n      });\n      return result;\n    })\n  }];\n}\nconst WA_MIDI_OUTPUT_QUERY = new InjectionToken('[WA_MIDI_OUTPUT_QUERY]');\n/**\n * @deprecated: drop in v5.0, use {@link WA_MIDI_OUTPUT_QUERY}\n */\nconst MIDI_OUTPUT_QUERY = WA_MIDI_OUTPUT_QUERY;\n\n/**\n * Provide MIDIOutput by id\n *\n * @param id\n */\nfunction outputById(id) {\n  return [{\n    provide: WA_MIDI_OUTPUT_QUERY,\n    useValue: id\n  }, {\n    provide: WA_MIDI_OUTPUT,\n    deps: [WA_MIDI_ACCESS, WA_MIDI_OUTPUT_QUERY],\n    useFactory: async (midiAccess, id) => midiAccess.then(access => {\n      let result;\n      access.outputs.forEach(output => {\n        if (output.id === id) {\n          result = output;\n        }\n      });\n      return result;\n    })\n  }];\n}\n\n/**\n * Provide MIDIOutput by name\n *\n * @param name\n */\nfunction outputByName(name) {\n  return [{\n    provide: WA_MIDI_OUTPUT_QUERY,\n    useValue: name\n  }, {\n    provide: WA_MIDI_OUTPUT,\n    deps: [WA_MIDI_ACCESS, WA_MIDI_OUTPUT_QUERY],\n    useFactory: async (midiAccess, name) => midiAccess.then(access => {\n      let result;\n      access.outputs.forEach(output => {\n        if (output.name === name) {\n          result = output;\n        }\n      });\n      return result;\n    })\n  }];\n}\nconst COEFFICIENT = 2 ** (1 / 12);\n/**\n * Convert frequencies to MIDI notes\n *\n * @param frequency\n * @param tuning tuning for middle A (440 by default)\n */\nfunction toNote(frequency, tuning = 440) {\n  return Math.round(Math.log(frequency / tuning) / Math.log(COEFFICIENT)) + 69;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FrequencyPipe, MIDI_ACCESS, MIDI_INPUT, MIDI_INPUTS, MIDI_MESSAGES, MIDI_OUTPUT, MIDI_OUTPUTS, MIDI_SUPPORT, SYSEX, WA_MIDI_ACCESS, WA_MIDI_INPUT, WA_MIDI_INPUTS, WA_MIDI_MESSAGES, WA_MIDI_OUTPUT, WA_MIDI_OUTPUTS, WA_MIDI_SUPPORT, WA_SYSEX, aftertouch, between, filterByChannel, filterById, filterByName, inputById, inputByName, mainVolume, modulationWheel, notes, outputById, outputByName, pan, pitchBend, polyphonicAftertouch, programChange, sustainPedal, toData, toDataByte, toFrequency, toNote, toStatusByte, toTimeStamp, toValueByte };\n"],
  "mappings": "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",
  "names": ["id", "name", "id", "name"]
}
